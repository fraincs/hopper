[{"tags":{},"filePath":"/packages/components/src/tag/src/TagList.tsx","description":"","displayName":"TagList","methods":[],"props":{"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: TagListRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The contents of the collection.","name":"children","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionProps"}],"required":false,"type":{"name":"ReactNode | ((item: T) => ReactNode)"}},"items":{"defaultValue":null,"description":"Item objects in the collection.","name":"items","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<T>"}},"dependencies":{"defaultValue":null,"description":"Values that should invalidate the item cache when using dynamic collections.","name":"dependencies","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionProps"}],"required":false,"type":{"name":"any[]"}},"renderEmptyState":{"defaultValue":null,"description":"Provides content to display when there are no items in the tag list.","name":"renderEmptyState","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"TagListProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"TagListProps"}],"required":false,"type":{"name":"((props: TagListRenderProps) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: TagListRenderProps & { defaultClassName: string; }) => string)"}}},"groups":{"default":{"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: TagListRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The contents of the collection.","name":"children","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionProps"}],"required":false,"type":{"name":"ReactNode | ((item: T) => ReactNode)"}},"items":{"defaultValue":null,"description":"Item objects in the collection.","name":"items","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<T>"}},"dependencies":{"defaultValue":null,"description":"Values that should invalidate the item cache when using dynamic collections.","name":"dependencies","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"CollectionProps"}],"required":false,"type":{"name":"any[]"}},"renderEmptyState":{"defaultValue":null,"description":"Provides content to display when there are no items in the tag list.","name":"renderEmptyState","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"TagListProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"TagListProps"}],"required":false,"type":{"name":"((props: TagListRenderProps) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/tag/src/TagList.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: TagListRenderProps & { defaultClassName: string; }) => string)"}}},"events":{},"accessibility":{},"layout":{}}}]